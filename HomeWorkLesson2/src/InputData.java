import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;

public class InputData {
    final int MATRIX_SIZE = 5;
    String filename;
    float[][] data;
    boolean read_ok = false;

    public InputData(String filename) {
        this.filename = filename;
        data = new float[MATRIX_SIZE][MATRIX_SIZE];
        try {
            BufferedReader br = new BufferedReader(new FileReader(filename));
            for (int i = 0; i < 5; i++) {
                String[] s = br.readLine().split(" ");
                System.out.println(Arrays.toString(s));
                for (int j = 0; j < 5; j++) {
                    try {
                        data[i][j] = Float.valueOf(s[j]);
                    }
                    catch(NumberFormatException e){
                        System.out.println(e.toString() + " В таблице есть ошибки - не все данные представляют собой числа.");
                        read_ok = false;
                        return;
                    }
                }
            }
            br.close();
            read_ok = true;
        } catch (NullPointerException | ArrayIndexOutOfBoundsException e) {
            System.out.println("Неверный размер матрицы в файле " + filename + "\n" + e.toString());
        } catch (FileNotFoundException e) {
            System.out.println("Файл с именем " + filename + " не найден!");
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }

    public String calculateAndGenerate() {
        StringBuilder sb = new StringBuilder("Input File: " + filename + "\n=================================\n");
        float alpha, betta, delta;
        alpha = betta = delta = 0.0f;
        for (int i = 0; i < MATRIX_SIZE; i++) {
            alpha += data[0][i] * data[i][0];
        }
        for (int i = 0; i < MATRIX_SIZE; i++) {
            for (int j = 0; j < MATRIX_SIZE; j++) {
                betta += data[i][j];
            }
        }
        delta = betta / alpha;
        sb.append("Calculation results:\n=================================\n");
        sb.append(String.format("alpha: %2f\nbetta: %2f\ndelta: %2f\n", alpha, betta, delta));
        sb.append("=================================\nReport generated by DocGenerator");
        return sb.toString();
    }

    public boolean isReaded() { return read_ok; }
}
